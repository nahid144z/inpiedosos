//funcao que cria o campo final de selecao de campo de aplicação com busca
function campo_de_atuacao_select(resultados){
    json1 = new Object;
    json1.data = new Array;
    var cont3 = 0;
    itens.forEach(function(name){
      cont3++;
      obj = new Object;
      obj.groupName = "Grupo 1";
      obj.id = name.id;
      obj.name = name.titulo;
      obj.selected = false;
      if(resultados[name.categoria]==true){
        json1.data.push(obj);
      }
    });

    $('.dropdown-mul-1').dropdown({
      data: json1.data,
      multipleMode: 'label',
    });


    $('.dropdown-mul-2').dropdown({
      limitCount: 5,
      searchable: false
    });
}

//funcao que cria os formulários dinamicamente 
function init(json,resultado_anterior) {
  var form_categorias = {
         "locale": "pt-br",
         "title": {
          "pt-br": "Registro de Programas de Computador - Campo de Aplicação"
         },
         "completedHtml": {
          "pt-br": '<h2> Campo de Atuação</h2><br><div class="row"><div class="col-sm-4"><div class="dropdown-mul-1"><select style="display:none"  name="" id="" multiple placeholder="Select"> </select></div></div></div>'
         },
         "pages": [
          {
           "name": "page1",
           "elements": [
            {
             "type": "panel",
             "name": "panel1"
            },
            {
             "type": "boolean",
             "name": categorias[cont],
             "title": {
              "pt-br": "O seu programa é da área de "+categorias[cont]+"?"
             },
             "isRequired": true
            }
           ]
          }
         ],
         "sendResultOnPageNext": true,
         "completeText": {
          "pt-br": "Próximo"
         }
      };
  json = form_categorias;
  cont++;

  Survey.StylesManager.applyTheme("default");
  window.survey = new Survey.Model(json);
  
  survey.onComplete.add(function(result) {
    resultados = {};
      $.extend(resultados, result.data, resultado_anterior);
      resultado_anterior = result.data;
      if(cont<categorias.length){
        init(json,resultados);
      } else {
        campo_de_atuacao_select(resultados);
      }
  });

  $("#surveyElement").Survey({
    model: survey
  });
}

var categorias = [];
var itens = [];
var cont = 0;

(async () => {
    //funcao async carrega dados do banco de dados do backend
    //funcao async cria os dois arrays que serão utilizados nas próximas funções (itens e categorias)
    const json1 = await $.getJSON('http://localhost/inpi-hack/backend-tests/all.json', function(data) {
            var cont2 = 0;
            data.forEach(function(name){
              if(cont2 > 0){
                item = new Object();
                item.categoria = name.categoria;
                item.titulo = name.codigo + " - " + name.titulo + "( " + name.descricao +" ) ";
                item.id = name.codigo;
                itens.push(item);
                categorias.push(name.categoria);
              }
              cont2++;
            });
            function sort_unique(arr) {
              if (arr.length === 0) return arr;
              arr = arr.sort(function (a, b) { return a*1 - b*1; });
              var ret = [arr[0]];
              for (var i = 1; i < arr.length; i++) { //Start loop at 1: arr[0] can never be a duplicate
                if (arr[i-1] !== arr[i]) {
                  ret.push(arr[i]);
                }
              }
              return ret;
            }
            categorias = sort_unique(categorias);
        });
        init("","");
})();